/**** Start of imports. If edited, may not auto-convert in the playground. ****/
var geometry = 
    /* color: #d63000 */
    /* shown: false */
    ee.Geometry.MultiPoint();
/***** End of imports. If edited, may not auto-convert in the playground. *****/
/**
 * Título: Clasificación de Coberturas de la Tierra
 * Descripción: Este script es desarrollado en  JavaScript para ser ejecutado en Google Earth Engine.  
 *            Ejecuta un flujo de trabajo completo de clasificación de cobertura de tierra.
 *      
 *            Luego evalúa la exactitud de la clasificación con los datos de validación generados 
 *              con el módulo exec_prepare_data, los cuales fueron almacenados previamente en un asset.
 *  Autora:   Liliana Castillo Villamor
 *  Versión: 1.0
 *  Detalles: El módulo ejecuta un flujo de trabajo completo de clasificación de cobertura de tierra 
 *              usando las funciones disponibles en el módulo classify. 
 *            Utiliza un enfoque de máxima probabilidad basado en los primitivos, 
 *            los cuales se construyen a partir de la imagen de covariables generada previamente con el módulo exec_prepare_data. 
 *            Luego evalúa la exactitud de la clasificación con los datos de validación generados con módulo exec_prepare_data, l
 *            Estos datos de validaciónos fueron almacenados previamente en un asset.  
 * Contacto:  lccastillov@gmail.com
 * Referencias: El Script acá presentado adapta elementos desarrollados por Kyle Woodward para Python (https://github.com/kyle-woodward)
 * 
**/


//Importar módulos
var modulo_classifier=require('users/an-sig/sinchi:classification/classify');
var moduloVarDefinition=require('users/an-sig/sinchi:classification/variables_definition');

//// Obtener variables desde el módulo de preparación de datos
var clase =moduloVarDefinition.clase;
var semestre =moduloVarDefinition.semestre;
var TrainingDataPath=moduloVarDefinition.TrainingDataPath;
var TestingDataPath=moduloVarDefinition.TestingDataPath;
var image_covariatesPath=moduloVarDefinition.image_covariatesPath;
var Region_100K =moduloVarDefinition.Region_100K;
var geometry_test=moduloVarDefinition.geometry_test;
var region=geometry_test;
var CoberturaTierra = moduloVarDefinition.CoberturaTierra;
var geometry = region;
var start_year = moduloVarDefinition.start_year;//año inicio del análisis
var start_month =moduloVarDefinition.start_month;
var start_day =moduloVarDefinition.start_day;
var end_year=moduloVarDefinition.end_year;
var end_month =moduloVarDefinition.end_month;
var ano=moduloVarDefinition.ano;




// Cargar los datos de entrenamiento y prueba y la imagen de covariables
//nalmacenados en un asset

var trainingDataUpdated = ee.FeatureCollection(TrainingDataPath);
var testingDataBalanced = ee.FeatureCollection(TestingDataPath);
var image_covariates = ee.Image(image_covariatesPath);

//Crear colección de imágenes de las clases de cobertura de tierra (primitivos)
var primitives=modulo_classifier.createLCPrimitiveCollection(image_covariates, trainingDataUpdated, clase) ;

var multibandImage = primitives.toBands(); // Convertir colección de primitivos en una imagen multibanda


// Ensamblar imagen de clasificación de máxima probabilidad a partir de la colección de primitivos
var assembleMax=modulo_classifier.assembleMaxProbability(primitives);


// Ejecutar la función para agregar la imagen clasificada al mapa
var classifiedImage = ee.Image(assembleMax); // Reemplaza 'tu_imagen_aqui' con el ID de tu imagen


//Matriz de confusion y metricas para clasificador usando primitivos
modulo_classifier.calculateConfusionMatrixB(assembleMax, testingDataBalanced);

// Exportar la imagen clasificada al Asset de GEE

Export.image.toAsset({
    image: classifiedImage,
    description: 'Imagen_clasificada',
    assetId: CoberturaTierra, 
    scale: 20,
    region: geometry_test, 
    maxPixels: 1e9 
});

