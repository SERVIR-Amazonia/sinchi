/**
* Este modulo  realiza actividades de pre-procesamiento de 
* las imágenes de Sentinel-2 y puntos de muestreo en la región de la Amazonía Colombiana.
*/


// Declarar variables
//var aoi = Region_100K.first().geometry();
//var region = aoi.buffer(100);

var start_year = 2022;//año inicio del análisis
exports.start_year = start_year; // Exportar la variable para que sea usada en otro módulo

var start_month = 1; //mes inicio del análisis
exports.start_month=start_month;

var start_day = 1; //día inicio del análisis
exports.start_day=start_day;

var end_year = 2022; //año fin del análisis
exports. end_year= end_year;

var end_month = 7; // mesfin del análisis
exports.end_month=end_month;

var end_day = 31; // día fin del análisis
exports.end_day=end_day;

var clase ='nivel_1';
exports.clase =clase;

var semestre='S1'
exports.semestre =semestre;

// Ruta donde se almacena asset con puntos de entrenamiento (incluyendo valores de covariables)
var TrainingDataPath='projects/pc300-samz-sinchi/assets/sampling_points/trainingDataUpdated'
      +semestre; 
exports.TrainingDataPath=TrainingDataPath

var TestingDataPath='projects/pc300-samz-sinchi/assets/sampling_points/testingDataUpdated'
      +semestre; 
exports.TestingDataPath=TestingDataPath

var image_covariatesPath='projects/pc300-samz-sinchi/assets/imageCovariates'+semestre
exports.image_covariatesPath=image_covariatesPath

var Region_100K = ee.FeatureCollection(
  "projects/pc300-samz-sinchi/assets/Region_100K"); //Dominio espacial de Amazonía Colombia
exports.Region_100K =Region_100K;

var geometry2 = /* color: #d63000 */ee.Geometry.Polygon(
        [[[-76.52690083861457, 0.9302446273087676],
          [-76.19731099486457, 0.8533496515477291],
          [-75.98857076048957, 0.9522143186707459],
          [-75.84574849486457, 1.116982317900684],
          [-75.25248677611457, 0.7544824434102667],
          [-74.93388326048957, 0.7434970539935699],
          [-74.48344380736457, 0.41392447663982723],
          [-74.60429341673957, 0.01842026440261293],
          [-74.13188130736457, -0.25623708426004604],
          [-73.68144185423957, 0.3480079686606994],
          [-74.12089497923957, 0.8643347454264071],
          [-73.82426411986457, 1.6112254409982427],
          [-73.37382466673957, 2.072411587496784],
          [-72.74760396361457, 1.6222073957367504],
          [-72.31913716673957, 1.567297033986431],
          [-71.50614888548957, 2.873660033735755],
          [-72.11039693236457, 3.0492064653026993],
          [-73.87919576048957, 3.4331121487817096],
          [-74.28568990111457, 3.4002117481688487],
          [-74.41752583861457, 2.994351205436806],
          [-73.67045552611457, 2.6322399358683044],
          [-74.88993794798957, 1.3805913351450838],
          [-76.03251607298957, 1.7979102902170863]]]); // Polígono usada para realizar pruebas


var region=geometry2;
var geometry = region;

exports.geometry_test =geometry2;

var module_extract_samples = require(
  'users/an-sig/sinchi:classification/module_extract_samples'
  ); // Modulo para extraer puntos de meustreo y validación
  
var moduloComposite= require(
  'users/an-sig/sinchi:classification/composition'
  ); // Modulo que construye la composición de imágenes Sentinel-2 para el periodo indicado
var moduloCovariates= require(
  'users/an-sig/sinchi:classification/covariates'
  );// Modulo que crea imagen con covariables



// Cargar archivos shapefile con puntos de validación como feature collection
var sampling_points_S1 = ee.FeatureCollection('projects/pc300-samz-sinchi/assets/sampling_points/poli_2022_S1_points');
var sampling_points_S2 = ee.FeatureCollection('projects/pc300-samz-sinchi/assets/sampling_points/poli_2022_S2_points');


var estratos_balanced=module_extract_samples.estratoBalance(sampling_points_S1, clase) 
var balanceAndApplyCorrelation=module_extract_samples.balanceAndApplyCorrelation;	

var training=estratos_balanced.training;	
var testing=estratos_balanced.testing;

var processedImage = moduloComposite.s2process(region, start_year, end_year, start_month, start_day,end_month, end_day);

var image_covariates=moduloCovariates.returnCovariates(processedImage,geometry).clip(region);
var image_covariates=ee.Image(image_covariates);

var imageGeometry = image_covariates.geometry();

//Exportar iamgen con covariables a un asset
/*
Export.image.toAsset({
    image: image_covariates,
    description: 'ExportedImageCovariates',
    assetId: image_covariatesPath, 
    scale: 20,
    region: imageGeometry, // Define la región (la misma gemetria de la imagen)
    maxPixels: 1e9 
});
*/

// Filtrar el FeatureCollection para conservar solo los puntos dentro del extent de la imagen
var training = training.filterBounds(imageGeometry);


//exportar los training points a un asset
var sampledPtsFromImg = module_extract_samples.PreparePts(training, testing, image_covariates,clase);

var trainingDataUpdated=sampledPtsFromImg.trainingDataUpdated;
print("trainingDataUpdated 129",trainingDataUpdated);
var testingDataUpdated=sampledPtsFromImg.testingDataUpdated;

// Exportar la colección de entrenamiento
Export.table.toAsset({
  collection: trainingDataUpdated,
  description: 'training_data_export',
  assetId: TrainingDataPath
});

// Exportar la colección de entrenamiento
Export.table.toAsset({
  collection: testingDataUpdated,
  description: 'testing_data_export',
  assetId: TestingDataPath
});



