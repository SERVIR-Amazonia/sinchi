var miModulo = require('users/an-sig/sinchi:classification/Module_extract_samples');

// Ejecutar la funci√≥n y recibe los resultados
var visualizationResults = miModulo.executeAndVisualize();
var balanceAndApplyCorrelation=miModulo.balanceAndApplyCorrelation
// Mostrar los resultados
var S1_training=balanceAndApplyCorrelation.combinedResults_S1.training;
print("combinedResults_S1.testing", visualizationResults.combinedResults_S1.testing);
print("combinedResults_S2.training", visualizationResults.combinedResults_S2.training);
print("combinedResults_S2.testing", visualizationResults.combinedResults_S2.testing);

// Mostrar los resultados
print("combinedResults_S1.training", visualizationResults.combinedResults_S1.training);
print("combinedResults_S1.testing", visualizationResults.combinedResults_S1.testing);
print("combinedResults_S2.training", visualizationResults.combinedResults_S2.training);
print("combinedResults_S2.testing", visualizationResults.combinedResults_S2.testing);

// Agregar las capas de los puntos de muestreo al mapa
Map.addLayer(visualizationResults.combinedResults_S1.training, {color: 'blue'}, 'Training Points S1');
Map.addLayer(visualizationResults.combinedResults_S1.testing, {color: 'red'}, 'Testing Points S1');
Map.addLayer(visualizationResults.combinedResults_S2.training, {color: 'green'}, 'Training Points S2');
Map.addLayer(visualizationResults.combinedResults_S2.testing, {color: 'yellow'}, 'Testing Points S2');

// Centrar el mapa en uno de los conjuntos de puntos
Map.centerObject(visualizationResults.combinedResults_S1.training);